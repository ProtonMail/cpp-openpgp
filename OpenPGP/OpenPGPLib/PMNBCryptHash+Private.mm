// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from open_pgp.djinni

#import "PMNBCryptHash+Private.h"
#import "PMNBCryptHash.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface PMNBCryptHash ()

- (id)initWithCpp:(const std::shared_ptr<::ProtonMail::BCryptHash>&)cppRef;

@end

@implementation PMNBCryptHash {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ProtonMail::BCryptHash>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ProtonMail::BCryptHash>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nonnull NSString *)hashString:(nonnull NSString *)password
                            salt:(nonnull NSString *)salt {
    try {
        auto objcpp_result_ = ::ProtonMail::BCryptHash::hash_string(::djinni::String::toCpp(password),
                                                                    ::djinni::String::toCpp(salt));
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace OBJ_ProtonMail {

auto BCryptHash::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto BCryptHash::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<PMNBCryptHash>(cpp);
}

}  // namespace OBJ_ProtonMail

@end
