// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from open_pgp.djinni

package ch.protonmail.android.utils.nativelib;

import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

public abstract class INickname {
    @Nonnull
    public abstract String getNickname();

    @Nonnull
    public abstract String getType();

    @Nonnull
    public abstract ArrayList<String> getValues();

    @CheckForNull
    public static INickname createInstance(@Nonnull String type, @Nonnull String value)
    {
        return CppProxy.createInstance(type,
                                       value);
    }

    private static final class CppProxy extends INickname
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public String getNickname()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getNickname(this.nativeRef);
        }
        private native String native_getNickname(long _nativeRef);

        @Override
        public String getType()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getType(this.nativeRef);
        }
        private native String native_getType(long _nativeRef);

        @Override
        public ArrayList<String> getValues()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getValues(this.nativeRef);
        }
        private native ArrayList<String> native_getValues(long _nativeRef);

        @CheckForNull
        public static native INickname createInstance(@Nonnull String type, @Nonnull String value);
    }
}
