// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from open_pgp.djinni

package ch.protonmail.android.utils.nativelib;

import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

public abstract class IAddress {
    @Nonnull
    public abstract String getStreetAddress();

    @Nonnull
    public abstract String getExtendedAddress();

    @Nonnull
    public abstract String getLocality();

    @Nonnull
    public abstract String getRegion();

    @Nonnull
    public abstract String getPostalCode();

    @Nonnull
    public abstract String getCountry();

    @Nonnull
    public abstract ArrayList<String> getTypes();

    @Nonnull
    public abstract String getPoBox();

    @Nonnull
    public abstract ArrayList<String> getPoBoxes();

    @CheckForNull
    public static native IAddress createInstance(@Nonnull String type, @Nonnull String street, @Nonnull String extendstreet, @Nonnull String locality, @Nonnull String region, @Nonnull String zip, @Nonnull String country, @Nonnull String pobox);

    private static final class CppProxy extends IAddress
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public String getStreetAddress()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getStreetAddress(this.nativeRef);
        }
        private native String native_getStreetAddress(long _nativeRef);

        @Override
        public String getExtendedAddress()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getExtendedAddress(this.nativeRef);
        }
        private native String native_getExtendedAddress(long _nativeRef);

        @Override
        public String getLocality()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getLocality(this.nativeRef);
        }
        private native String native_getLocality(long _nativeRef);

        @Override
        public String getRegion()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getRegion(this.nativeRef);
        }
        private native String native_getRegion(long _nativeRef);

        @Override
        public String getPostalCode()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getPostalCode(this.nativeRef);
        }
        private native String native_getPostalCode(long _nativeRef);

        @Override
        public String getCountry()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getCountry(this.nativeRef);
        }
        private native String native_getCountry(long _nativeRef);

        @Override
        public ArrayList<String> getTypes()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getTypes(this.nativeRef);
        }
        private native ArrayList<String> native_getTypes(long _nativeRef);

        @Override
        public String getPoBox()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getPoBox(this.nativeRef);
        }
        private native String native_getPoBox(long _nativeRef);

        @Override
        public ArrayList<String> getPoBoxes()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getPoBoxes(this.nativeRef);
        }
        private native ArrayList<String> native_getPoBoxes(long _nativeRef);
    }
}
